{data?.map((item, index) => {
              if (index === 0) {
                return (
                  <div
                    data-id={item?.id}
                    ref={(ref) => handleVideoRef(ref, index)}
                    className="d-flex justify-content-center scroll-area"
                  >
                    <div
                      key={index}
                      className={`video-card
                    
                    ${
                      isDarkMode
                        ? "video-card-dark-shadow"
                        : "video-card-light-shadow"
                    }
                    `}
                    >
                      {/* <div className="blur-overlay" /> */}
                      {/* <div className="pl-icon">
                  {isPlaying ? <BiPause size={40} /> : <BsPlay size={40} />}
                </div> */}
                      <div
                        className="mic-icon mic-icon-top"
                        onClick={handleMicClick}
                      >
                        {isMuted ? (
                          <BiVolumeMute size={30} />
                        ) : (
                          <BiVolumeFull size={30} />
                        )}
                      </div>
                      <div className="player-wrapper">
                        <ReactPlayer
                          // className="custom-player"
                          muted={isMuted}
                          playing={item?.isPlaying}
                          isPlaying={item?.isPlaying}
                          // playing
                          url={item.videoURL}
                          controls={false}
                          width="100wh"
                          // height="800px"
                          height="100%"
                          // width="472"
                          // aspectRatio="9:16"
                          onEnded={() => {
                            handleVideoEnd();
                          }}
                          onPause={() => {
                            handlePause(item?.id);
                          }}
                          onPlay={() => {
                            handlePlay(item?.id);
                          }}
                          // onEnded={() => {
                          //   handlePlay();
                          // }}

                          // style={{ position: "absolute", top: 0, left: 0 }}
                        />
                        <div className="video-info">
                          <div className="profile-image">
                            <img
                              style={{ height: "47px" }}
                              src={item?.profileURL}
                              alt="Profile"
                            />
                          </div>
                          <div className="profile-info">
                            <div className={`d-flex justify-content-between`}>
                              <div>
                                <div className="profile-name">{item?.name}</div>
                                <div className="profile-day">{item?.time}</div>
                              </div>
                              <div>
                                <button
                                  type="button"
                                  className="btn btn-outline-light rounded-pill "
                                >
                                  <FaUserPlus className="follow" />
                                  Follow
                                </button>
                              </div>
                            </div>
                            <div className="profile-desc">
                              {item?.description}
                            </div>
                          </div>
                        </div>
                      </div>
                      {!isPlaying && (
                        <div className="play-button" onClick={handlePlay}>
                          {/* <BsPlay className="text-light" size={30} /> */}
                        </div>
                      )}
                    </div>

                    <div
                      className={`
                      
                       justify-content-center d-flex  ms-4 action_main action_main_first`}
                    >
                      <div className="text-center margin">
                        <div className="action_icon">
                          <AiOutlineHeart size={30} />
                        </div>
                        <span>{item?.hearts}</span>
                      </div>
                      <div className="text-center margin">
                        <div className="action_icon">
                          <AiOutlineComment size={30} />
                        </div>
                        <span>{item?.comments}</span>
                      </div>
                      <div className="text-center margin">
                        <div className="action_icon">
                          <AiOutlineShareAlt size={30} />
                        </div>
                        <span>{item?.shares}</span>
                      </div>
                      <div className="text-center margin">
                        <div className="action_icon">
                          <FiMoreHorizontal size={30} />
                        </div>
                      </div>
                    </div>
                  </div>
                );
              } else {
                return (
                  <div
                    data-id={item?.id}
                    ref={(ref) => handleVideoRef(ref, index)}
                    className="d-flex justify-content-center scroll-area"
                  >
                    <div
                      key={index}
                      className={`video-card top
                    
                    ${
                      isDarkMode
                        ? "video-card-dark-shadow"
                        : "video-card-light-shadow"
                    }
                    `}
                    >
                      {/* <div className="blur-overlay" /> */}
                      {/* <div className="pl-icon">
                  {isPlaying ? <BiPause size={40} /> : <BsPlay size={40} />}
                </div> */}
                      <div
                        className="mic-icon mic-icon-rest"
                        onClick={handleMicClick}
                      >
                        {isMuted ? (
                          <BiVolumeMute size={30} />
                        ) : (
                          <BiVolumeFull size={30} />
                        )}
                      </div>
                      <div className="player-wrapper">
                        <ReactPlayer
                          muted={isMuted}
                          playing={item?.isPlaying}
                          isPlaying={item?.isPlaying}
                          // playing
                          url={item.videoURL}
                          controls={false}
                          width="100wh"
                          // height="800px"
                          height="100%"
                          // width="472"
                          // aspectRatio="9:16"
                          onEnded={() => {
                            handleVideoEnd();
                          }}
                          onPause={() => {
                            handlePause(item?.id);
                          }}
                          onPlay={() => {
                            handlePlay(item?.id);
                          }}
                          // onEnded={() => {
                          //   handlePlay();
                          // }}

                          // style={{ position: "absolute", top: 0, left: 0 }}
                        />
                        <div className="video-info">
                          <div className="profile-image">
                            <img
                              style={{ height: "47px" }}
                              src={item?.profileURL}
                              alt="Profile"
                            />
                          </div>
                          <div className="profile-info">
                            <div className={`d-flex justify-content-between`}>
                              <div>
                                <div className="profile-name">{item?.name}</div>
                                <div className="profile-day">{item?.time}</div>
                              </div>
                              <div>
                                <button
                                  type="button"
                                  className="btn btn-outline-light rounded-pill "
                                >
                                  <FaUserPlus className="follow" />
                                  Follow
                                </button>
                              </div>
                            </div>
                            <div className="profile-desc">
                              {item?.description}
                            </div>
                          </div>
                        </div>
                      </div>
                      {!isPlaying && (
                        <div className="play-button" onClick={handlePlay}>
                          {/* <BsPlay className="text-light" size={30} /> */}
                        </div>
                      )}
                    </div>

                    <div
                      className={`
                      
                       justify-content-center d-flex  ms-4 action_main action_main_rest`}
                    >
                      <div className="text-center margin">
                        <div className="action_icon">
                          <AiOutlineHeart size={30} />
                        </div>
                        <span>{item?.hearts}</span>
                      </div>
                      <div className="text-center margin">
                        <div className="action_icon">
                          <AiOutlineComment size={30} />
                        </div>
                        <span>{item?.comments}</span>
                      </div>
                      <div className="text-center margin">
                        <div className="action_icon">
                          <AiOutlineShareAlt size={30} />
                        </div>
                        <span>{item?.shares}</span>
                      </div>
                      <div className="text-center margin">
                        <div className="action_icon">
                          <FiMoreHorizontal size={30} />
                        </div>
                      </div>
                    </div>
                  </div>
                );
              }
            })}